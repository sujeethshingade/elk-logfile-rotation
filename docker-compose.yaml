version: "3.9"

services:
  elasticsearch:
    image: elasticsearch:8.6.0
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]
      interval: 5s
      timeout: 5s
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.6.0
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: logstash:8.6.0
    user: root
    ports:
      - "5000:5000"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config:/usr/share/logstash/config
      - logstash-logs:/usr/share/logstash/logs
      - ./logstash/logrotate-setup.sh:/logrotate-setup.sh
    command: >
      bash -c "/logrotate-setup.sh && chown -R logstash:logstash /usr/share/logstash/logs && 
      su -c '/usr/share/logstash/bin/logstash -f /usr/share/logstash/pipeline/logstash.conf' logstash"
    links:
      - elasticsearch
    depends_on:
      elasticsearch:
        condition: service_healthy

  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:5000"
    links:
      - logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./app.py:/app/app.py
      - ./templates:/app/templates

volumes:
  elasticsearch-data:
  logstash-logs:
